Congratulations, you can now write and use pipelines in **PyAutoLens**!

For most lens models there are standardized approaches one can take to fitting them. For example, as we saw in
tutorial 3 of this chapter, an effective approach is to fit a model for the lens's light followed by a model for its
mass and the source. It would be wasteful for all **PyAutoLens** users to have to write their own pipelines to
perform the same tasks.

For this reason, the `autolens_workspace` comes with a number of standardized pipelines, which fit common lens models
in ways we have tested are efficient and robust. Take a look at the 'chaining' and `pipelines` folders in
the `autolens_workspace`, which contain these template scripts for fitting a variety of lens models via search chaining.

Before modeling a lens, I would recommend that you check if a template exists for what you want to do
with **PyAutoLens**, before attempting to write a pipeline from scratch. Of course, many of these templates probably
require only minor tweaking to meet your scientific needs.

SLaM (Source, Light and Mass) Pipelines
---------------------------------------

A second set of template pipelines, called the **SLaM** (Source, Light and Mass) pipelines can be found in the folder
`chaining/slam`. These are similar in design to the `pipelines`, but are composed of the following specific pipelines:

 - `Source`: A pipeline that focuses on producing a robust model for the source's light, using simpler models for the
   lens's light (e.g. a `bulge` + `disk`) and mass (e.g. an `EllipticalSersic`).

 - `Light`: A pipeline that fits a complex lens light model (e.g. one with many components), using the initialized
   source model to cleanly deblend the lens and source light.

 - `Mass`: A pipeline that fits a complex lens mass model, benefiting from the good models for the lens's light and
   source.

For fitting very complex lens models, for example ones which decompose its mass into its stellar and dark components,
the **SLaM** pipelines have been carefully crafted to do this in a reliable and automated way that is still efficient.

The **SLaM** pipelines also make fitting many different models to a single dataset efficient, as they reuse the results
of earlier searches (e.g. in the Source pipeline) to fit different models in the `Light` and `Mass` pipelines for the
lens's  light and mass.

Whether you should use simple search chaining scripts, pipelines, the SLaM pipelines, or write your own scripts depends
on the scope of your scientific analysis!